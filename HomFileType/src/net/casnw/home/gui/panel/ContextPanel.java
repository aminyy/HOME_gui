/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.casnw.home.gui.panel;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.WindowConstants;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.casnw.home.gui.homFileType.HomFileDataObject;
import net.casnw.home.gui.utils.DataPoolOperation;
import net.casnw.home.io.ModelDescription;
import net.casnw.home.io.ModuleDescription;
import net.casnw.home.meta.DatatypeEnum;
import net.casnw.home.modules.api.Module;
import org.dom4j.DocumentException;
import org.openide.util.Exceptions;


/**
 *
 * @author Administrator
 */
public class ContextPanel extends javax.swing.JPanel {

    /**
     * Creates new form ContextPanel
     */
    private DefaultTableModel model = null;
    private DataPoolOperation dpo = null;
    private Module obj = null;
    private HomFileDataObject hdo;

    public ContextPanel(Module obj, DataPoolOperation dpo, HomFileDataObject hdo) {
        initComponents();
        this.obj = obj;
        this.dpo = dpo;
        this.hdo = hdo;
        String[] headers = {"变量名", "数据类型", "值", "对应模块"};
        Object[][] cellData = null;

        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setDefaultRenderer(JButton.class, new ComboBoxCellRenderer());

        cellData = dpo.getContextVariables(obj.getName());

        model = new DefaultTableModel(cellData, headers) {

            public boolean isCellEditable(int row, int column) {
                if (column == 0) {
                    return false;
                } else {
                    return true;
                }
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 3) {
                    return JButton.class;
                }
                return super.getColumnClass(columnIndex);
            }
        };
        jTable1.setModel(model);

        //变量数据类型为下拉列表
        JComboBox cbox = new JComboBox();

        for (DatatypeEnum name : DatatypeEnum.values()) {
            cbox.addItem(name.toString());
        }

        TableCellEditor edt = new DefaultCellEditor(cbox);
        TableColumnModel colunmnModel = jTable1.getColumnModel();
        TableColumn t1col = colunmnModel.getColumn(1);
        t1col.setCellEditor(edt);

        //对应模块，点击之后进入到另外一个table
        addHandler();
    }

    private void addHandler() {
        //添加事件
        jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                System.out.println("table");
                int row = jTable1.getSelectedRow();
                int column = jTable1.getSelectedColumn();
                System.out.println("row=" + row + ":" + "column=" + column);
                if (column == 3) {
                    //处理button事件写在这里...
                    System.out.println(((JButton) jTable1.getValueAt(row, column)).getText());
                    //取出变量名称
                    String varName = jTable1.getValueAt(row, 0).toString();
                    String dataType = jTable1.getValueAt(row, 2).toString();
                            
                    //弹出模块容器变量对应表
                    JFrame jf = new JFrame("设置数据池中属性与模块关联");//实例化一个对象
                    Container container = jf.getContentPane();//获取一个容器
                    VarLinkPanel cp = new VarLinkPanel(obj,dpo,hdo,varName,dataType);

                    container.add(cp);//将标签添加到容器中

                    jf.setVisible(true);//可视化
                    jf.setSize(350, 300);//设窗体大小
                    jf.setLocation(450, 350);
                    jf.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "变量名", "值", "单位"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ContextPanel.class, "ContextPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(ContextPanel.class, "ContextPanel.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        dpo.setContextValue(obj.getName(), model.getDataVector(), hdo, obj.getEle());
        //将修改的参数存入xml文件

        JOptionPane.showMessageDialog(this, "保存成功！", "消息", 0);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //新建容器变量
        String varName = JOptionPane.showInputDialog(this, "请输入变量名称：", "var1");

        Object[] rowData = {varName, null, null};
        model.addRow(rowData);
        jTable1.updateUI();

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

class ComboBoxCellRenderer implements TableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {
        JButton cmb = (JButton) value;
        if (isSelected) {
            cmb.setForeground(table.getSelectionForeground());
            cmb.setBackground(table.getSelectionBackground());
        } else {
            cmb.setForeground((unselectedForeground != null) ? unselectedForeground
                    : table.getForeground());
            cmb.setBackground((unselectedBackground != null) ? unselectedBackground
                    : table.getBackground());
        }
        cmb.setFont(table.getFont());
        if (hasFocus) {
            cmb.setBorder(UIManager.getBorder("Table.focusCellHighlightBorder"));
            if (!isSelected && table.isCellEditable(row, column)) {
                Color col;
                col = UIManager.getColor("Table.focusCellForeground");
                if (col != null) {
                    cmb.setForeground(col);
                }
                col = UIManager.getColor("Table.focusCellBackground");
                if (col != null) {
                    cmb.setBackground(col);
                }
            }
        } else {
            cmb.setBorder(noFocusBorder);
        }
        return cmb;
    }

    protected static Border noFocusBorder = new EmptyBorder(1, 1, 1, 1);

    private Color unselectedForeground;
    private Color unselectedBackground;
}
